services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        NODE_ENV: production
    ports:
      - "3000:80"
    depends_on:
      - backend
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:80/
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5002:5002"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=src/api/server.py
      - PYTHONUNBUFFERED=1
    volumes:
      - ./data:/app/data:ro
    depends_on:
      - ollama
    healthcheck:
      test: curl -f http://localhost:5002/api/health
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    restart: unless-stopped

  ollama-init:
    image: curlimages/curl:latest
    depends_on:
      - ollama
    restart: "no"
    command: >
      sh -c "
        echo 'Waiting for Ollama to be ready...' &&
        sleep 30 &&
        while ! curl -s http://ollama:11434/api/tags > /dev/null; do
          echo 'Waiting for Ollama API...' &&
          sleep 5;
        done &&
        echo 'Ollama is ready, pulling llama2 model...' &&
        curl -X POST http://ollama:11434/api/pull -d '{\"name\":\"llama2\"}' &&
        echo 'Llama2 model pull initiated'
      "

volumes:
  ollama_data:
    name: ai_training_planner_ollama_data
